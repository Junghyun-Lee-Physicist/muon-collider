
# Initialisation procedure
/run/initialize

# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors

# Draw geometry:
/vis/drawVolume

# Specify view angle:
##/vis/viewer/set/viewpointThetaPhi 120 150
#/vis/viewer/set/viewpointThetaPhi 160 45
/vis/viewer/set/viewpointThetaPhi 170 10

##/vis/viewer/set/lightsVector -1 0 0

# Zoom in by a factor of 10:
#/vis/viewer/zoom 1000
/vis/viewer/zoom 100

# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100

# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)

# Draw hits at end of event:
#/vis/scene/add/hits

# Decoration
/vis/scene/add/axes    # Simple axes: x=red, y=green, z=blue.
/vis/viewer/set/background white
/vis/viewer/set/globalLineWidthScale 1.2
/vis/viewer/set/defaultColour black
/vis/modeling/trajectories/drawByCharge-0/default/setLineWidth 1.0

# Change the limit of the visulization
/vis/ogl/set/displayListLimit 3000000

# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/set e- red
/vis/modeling/trajectories/drawByParticleID-0/set e+ blue
/vis/modeling/trajectories/drawByParticleID-0/set nu_e yellow
/vis/modeling/trajectories/drawByParticleID-0/set anti_nu_e red
/vis/modeling/trajectories/drawByParticleID-0/set geantino white
/vis/modeling/trajectories/drawByParticleID-0/set gamma green
/vis/modeling/trajectories/drawByParticleID-0/set alpha yellow
/vis/modeling/trajectories/drawByParticleID-0/set GenericIon magenta
/vis/modeling/trajectories/drawByParticleID-0/set neutron yellow
/vis/modeling/trajectories/drawByParticleID-0/set Ne22 cyan
/vis/modeling/trajectories/drawByParticleID-0/set geantino cyan
/vis/modeling/trajectories/drawByParticleID-0/set opticalphoton green
/vis/modeling/trajectories/drawByParticleID-0/set mu- cyan



# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate

# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
