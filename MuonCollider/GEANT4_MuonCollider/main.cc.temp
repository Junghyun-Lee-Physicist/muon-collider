#include "G4RunManager.hh"
#include "G4UImanager.hh"
#include "G4VisExecutive.hh"
#include "G4UIExecutive.hh"
#include "G4Random.hh"
#include "CLHEP/Random/Random.h"

#include "DetectorConstruction.hh"
#include "QBBC.hh"
#include "FTFP_BERT.hh"
#include "ActionInitialization.hh"

// ROOT includes
#include "TFile.h"

int main(int argc, char **argv)
{
    // Detect interactive mode (if no arguments) and define UI session
    G4UIExecutive *ui = nullptr;
    if (argc == 1)
        ui = new G4UIExecutive(argc, argv);

    // Set random seed number
    CLHEP::HepRandom::setTheSeed(time(nullptr));

    // Construct the default run manager
    auto runManager = new G4RunManager();

    // Set mandatory initialization classes
    runManager->SetUserInitialization(new DetectorConstruction);
    runManager->SetUserInitialization(new FTFP_BERT);
    runManager->SetUserInitialization(new ActionInitialization);

    // Initialize G4 kernel
    runManager->Initialize();

    // Initialize visualization
    auto visManager = new G4VisExecutive;
    visManager->Initialize();

    // Get the pointer to the User Interface manager
    auto UImanager = G4UImanager::GetUIpointer();

    // Process macro or start UI session
    if (ui)
    {
        // interactive mode
        UImanager->ApplyCommand("/control/execute vis.mac");
        ui->SessionStart();
        delete ui;
    }
    else
    {
        // batch mode
        G4String command = "/control/execute ";
        G4String filename = argv[1];
        UImanager->ApplyCommand(command + filename);
    }

    // Job termination
    // Free the store: user actions, physics_list and detector_description are
    // owned and deleted by the run manager, so they should not be deleted
    // in the main() program !
    delete visManager;
    delete runManager;

    return 0;
}

